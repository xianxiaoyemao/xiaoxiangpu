<?php
/**
 * Created by PhpStorm.
 * User: LENOVO
 * Date: 2020/10/5
 * Time: 22:06
 */
namespace app\admin\controller\product;

use app\common\controller\Backend;
use app\common\model\Product;
use app\common\model\ProductSku;
use app\common\model\Spec;
use app\Request;
use think\Exception;
use think\facade\Db;

class Goods extends Backend
{
    protected $categoryModel = null;

    protected $model = null;

    protected $skuModel = null;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->categoryModel = new \app\admin\model\Category();

        $this->model = new Product();

        $this->skuModel = new ProductSku();
        //分类
        $cate = $this->categoryModel->where('status', 1)->order('createtime', 'desc')->column('cate_name', 'id');
        //属性
//        $specInfo = Spec::with('specInfo')->visible(['specInfo' => ['spec_value', 'id']])->select()->toArray();
        /*foreach ($specInfo as $k => $v) {
            foreach ($v['specInfo'] as $key => $val) {
                $specInfo[$k]['info'][$val['id']] = $val['spec_value'];
            }
            unset($specInfo[$k]['specInfo']);
        }*/
//        dump($specInfo);die;
        $this->assign('category', $cate);
//        $this->assign('specInfo', $specInfo);
    }

    public function index (Request $request)
    {
        if ($request->isAjax()) {
            if ($request->request('keyField')) {
                return $this->selectpage();
            }
            [$where, $sort, $order, $offset, $limit] = $this->buildparams();
            $total = $this->model
                ->where($where)
                ->where('status', 1)
                ->count();
            $list = $this->model
                ->where($where)
                ->where('status', 1)
                ->order($sort, $order)
                ->limit($offset, $limit)
                ->select();
            $result = ['total' => $total, 'rows' => $list];
            return json($result);
        }
        return $this-> fetch();
    }

    /**
     * 商品添加
     * @return string
     * @throws \Exception
     */
    public function add(){
        if ($this->request->isPost()) {
            $params = $this->request->post('row/a');
//            dump($params);die;
            if($params){
                try {
                    $data['name'] = $params['name'];
                    $data['category_id'] = $params['category_id'];
                    $data['images'] = $params['images'];
                    $data['price'] = $params['price'];
                    $data['sales'] = $params['sales'];
                    $data['inventory'] = $params['inventory'];
                    $data['introduce'] = $params['introduce'];
                    $data['status'] = $params['status'] == 'normal' ? 1 : 2;
                    $data['is_recommend'] = $params['is_recommend'] == 'normal' ? 1 : 2;
                    $data['is_new'] = $params['is_new'] == 'normal' ? 1 : 2;
                    $data['is_hot_sale'] = $params['is_hot_sale'] == 'normal' ? 1 : 2;

                    $data['product_spec_info'] = $this->getSpenInfo($params['spec_name'], $params['spec_value']);
                    $data['create_time'] = time();
                    $product = $this->model->create($data);
                    //sku
                    $sku = $this->getSkuInfo($params['sku_title'], $params['sku_price'], $params['stock'], $product->id);

                    $this->skuModel->saveAll($sku);
                    $this->success();
                } catch (Exception $e) {
                    $this->error($e->getMessage());
                }
            }
            $this->error();
        }
        return $this-> fetch();
    }

    /**
     * 商品修改
     * @param null $ids
     * @return string
     * @throws \Exception
     */
    public function edit ($ids = null)
    {
        $product = $this->model->find($ids);

        //sku属性
        $sku = $product->prodeuctSku()->select();

        $this->assign('sku', $sku);
        $spec = json_decode($product->product_spec_info, 1);
        $product->spec_name = $spec['name'];
        $product->spec_value = implode('-', $spec['list']);
        if (! $product) {
            $this->error(__('No Results were found'));
        }

        if ($this->request->isPost()) {
            $params = $this->request->post('row/a');
            try {
                if ($params['status'] == 'normal') {
                    $params['status'] = 1;
                } else {
                    $params['status'] = 2;
                }
                if ($params['is_hot_sale'] == 'normal') {
                    $params['is_hot_sale'] = 1;
                } else {
                    $params['is_hot_sale'] = 2;
                }
                if ($params['is_new'] == 'normal') {
                    $params['is_new'] = 1;
                } else {
                    $params['is_new'] = 2;
                }
                if ($params['is_recommend'] == 'normal') {
                    $params['is_recommend'] = 1;
                } else {
                    $params['is_recommend'] = 2;
                }
                $params['product_spec_info'] = $this->getSpenInfo($params['spec_name'], $params['spec_value']);
                $product->save($params);

                $skuInfo = $this->getSkuInfo($params['sku_title'], $params['sku_price'], $params['stock'], $ids);
                $this->skuModel->where('product_id', $ids)->delete();
                $this->skuModel->saveAll($skuInfo);

                $this->success($ids);
            } catch (Exception $e) {
                $this->error($e->getMessage());
            }
        }
        $this->assign('row', $product);
        return $this->fetch();
    }

    public function getSkuInfo ($skuTitle, $skuPrice, $skuStock, $pid) {
        $sku = [];
        foreach ($skuTitle as $k => $v) {
            $sku[$k]['product_id'] = $pid;
            $sku[$k]['title'] = $v;
            $sku[$k]['price'] = $skuPrice[$k];
            $sku[$k]['stock'] = $skuStock[$k];
        }
        return $sku;
    }

    public function getSpenInfo ($specName, $specValue)
    {
        $spec = explode('-', $specValue);
        $specInfo = [
            'name' => $specName,
            'list' => $spec
        ];
        $result = json_encode($specInfo);
        return $result;
    }

    /**
     * 删除类目
     * @param string $ids
     * @throws \Exception
     */
    public function del ($ids = '')
    {
        if ($ids) {
            $goods = $this->model->find($ids);
            $goods->status = 9;
            $goods->save();
            $this->success();
        }
        $this->error();
    }
}
